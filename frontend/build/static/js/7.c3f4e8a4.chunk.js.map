{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","Map","mapRef","useRef","center","zoom","useEffect","window","ol","target","current","id","layers","layer","Tile","source","OSM","view","View","proj","fromLonLat","lng","lat","ref","PlaceItem","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","a","process","REACT_APP_BACKEND_URL","Authorization","token","onDelete","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","LoadingSpinner","asOverlay","src","REACT_APP_ASSET_URL","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","map","place","key","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","responseData","places","fetchPlaces","deletedPlaceId","prevPlaces","filter"],"mappings":"qGAAA,0BAYeA,IARF,SAAAC,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,+MC4BEC,G,MA9BH,SAAAJ,GACV,IAAMK,EAASC,mBAEPC,EAAiBP,EAAjBO,OAAQC,EAASR,EAATQ,KAiBhB,OAfAC,qBAAU,WACR,IAAIC,OAAOC,GAAGP,IAAI,CAChBQ,OAAQP,EAAOQ,QAAQC,GACvBC,OAAQ,CACN,IAAIL,OAAOC,GAAGK,MAAMC,KAAK,CACvBC,OAAQ,IAAIR,OAAOC,GAAGO,OAAOC,OAGjCC,KAAM,IAAIV,OAAOC,GAAGU,KAAK,CACvBd,OAAQG,OAAOC,GAAGW,KAAKC,WAAW,CAAChB,EAAOiB,IAAKjB,EAAOkB,MACtDjB,KAAMA,QAGT,CAACD,EAAQC,IAGV,yBACEkB,IAAKrB,EACLJ,UAAS,cAASD,EAAMC,WACxBC,MAAOF,EAAME,MACbY,GAAG,U,gCCqFMa,G,MAvGG,SAAA3B,GAChB,MAAsD4B,cAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WACjCC,EAAOC,qBAAWC,KACxB,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgDF,oBAAS,GAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KAIMC,EAAkB,kBAAMH,GAAW,IAMnCI,EAAsB,WAC1BF,GAAoB,IAGhBG,EAAoB,uCAAG,sBAAAC,EAAA,6DAC3BJ,GAAoB,GADO,kBAGnBT,EACJc,8CAAYC,sBAAZ,kBAA+C9C,EAAMc,IACrD,SACA,KACA,CACEiC,cAAe,UAAYd,EAAKe,QARX,OAWzBhD,EAAMiD,SAASjD,EAAMc,IAXI,uGAAH,qDAe1B,OACE,kBAAC,IAAMoC,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYrB,MAAOA,EAAOsB,QAASpB,IACnC,kBAACqB,EAAA,EAAD,CACEC,KAAMjB,EACNkB,SAAUd,EACVe,OAAQxD,EAAMyD,QACdC,aAAa,4BACbC,YAAY,4BACZC,OAAQ,kBAACC,EAAA,EAAD,CAAQC,QAASrB,GAAjB,UAER,yBAAKxC,UAAU,iBACb,kBAAC,EAAD,CAAKM,OAAQP,EAAM+D,YAAavD,KAAM,OAG1C,kBAAC6C,EAAA,EAAD,CACEC,KAAMf,EACNgB,SAAUb,EACVc,OAAO,gBACPG,YAAY,4BACZC,OACE,kBAAC,IAAMV,SAAP,KACE,kBAACW,EAAA,EAAD,CAAQG,SAAO,EAACF,QAASpB,GAAzB,UAGA,kBAACmB,EAAA,EAAD,CAAQI,QAAM,EAACH,QAASnB,GAAxB,YAMJ,6HAKF,wBAAI1C,UAAU,cACZ,kBAACF,EAAA,EAAD,CAAME,UAAU,uBACb4B,GAAa,kBAACqC,EAAA,EAAD,CAAgBC,WAAS,IACvC,yBAAKlE,UAAU,qBACb,yBACEmE,IAAG,UAAKvB,8CAAYwB,oBAAjB,YAAwCrE,EAAMsE,OACjDC,IAAKvE,EAAMwE,SAGf,yBAAKvE,UAAU,oBACb,4BAAKD,EAAMwE,OACX,4BAAKxE,EAAMyD,SACX,2BAAIzD,EAAMyE,cAEZ,yBAAKxE,UAAU,uBACb,kBAAC4D,EAAA,EAAD,CAAQG,SAAO,EAACF,QA9EH,kBAAMxB,GAAW,KA8E9B,eAGCL,EAAKyC,SAAW1E,EAAM2E,WACrB,kBAACd,EAAA,EAAD,CAAQe,GAAE,kBAAa5E,EAAMc,KAA7B,QAGDmB,EAAKyC,SAAW1E,EAAM2E,WACrB,kBAACd,EAAA,EAAD,CAAQI,QAAM,EAACH,QAlFM,WAC/BtB,GAAoB,KAiFV,gBClECqC,G,MA/BG,SAAA7E,GAChB,OAA2B,IAAvBA,EAAM8E,MAAMC,OAEZ,yBAAK9E,UAAU,qBACb,kBAACF,EAAA,EAAD,KACE,kEACA,kBAAC8D,EAAA,EAAD,CAAQe,GAAG,eAAX,iBAON,wBAAI3E,UAAU,cACXD,EAAM8E,MAAME,KAAI,SAAAC,GAAK,OACpB,kBAAC,EAAD,CACEC,IAAKD,EAAMnE,GACXA,GAAImE,EAAMnE,GACVwD,MAAOW,EAAMX,MACbE,MAAOS,EAAMT,MACbC,YAAaQ,EAAMR,YACnBhB,QAASwB,EAAMxB,QACfkB,UAAWM,EAAME,QACjBpB,YAAakB,EAAMG,SACnBnC,SAAUjD,EAAMqF,sBCgBXC,UAvCI,WACjB,MAAwClD,qBAAxC,mBAAOmD,EAAP,KAAqBC,EAArB,KACA,EAAsD5D,cAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WAEjC0C,EAASe,cAAYf,OAE3BjE,qBAAU,YACS,uCAAG,4BAAAmC,EAAA,+EAEWb,EAAY,GAAD,OACjCc,8CAAYC,sBADqB,wBACgB4B,IAHtC,OAEVgB,EAFU,OAKhBF,EAAgBE,EAAaC,QALb,uGAAH,qDAQjBC,KACC,CAAC7D,EAAa2C,IAQjB,OACE,kBAAC,IAAMxB,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYrB,MAAOA,EAAOsB,QAASpB,IAClCH,GACC,yBAAK5B,UAAU,UACb,kBAACiE,EAAA,EAAD,QAGFrC,GAAa0D,GACb,kBAAC,EAAD,CAAWT,MAAOS,EAAcF,cAfV,SAAAQ,GAC1BL,GAAgB,SAAAM,GAAU,OACxBA,EAAWC,QAAO,SAAAd,GAAK,OAAIA,EAAMnE,KAAO+E","file":"static/js/7.c3f4e8a4.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","\r\nimport React, { useRef, useEffect } from 'react';\r\n\r\nimport './Map.css';\r\n\r\nconst Map = props => {\r\n  const mapRef = useRef();\r\n\r\n  const { center, zoom } = props;\r\n\r\n  useEffect(() => {\r\n    new window.ol.Map({\r\n      target: mapRef.current.id,\r\n      layers: [\r\n        new window.ol.layer.Tile({\r\n          source: new window.ol.source.OSM()\r\n        })\r\n      ],\r\n      view: new window.ol.View({\r\n        center: window.ol.proj.fromLonLat([center.lng, center.lat]),\r\n        zoom: zoom\r\n      })\r\n    });\r\n  }, [center, zoom]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n      id=\"map\"\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './PlaceItem.css';\n\nconst PlaceItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\n        'DELETE',\n        null,\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) { }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.title}\n            />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map(place => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (err) { }\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = deletedPlaceId => {\n    setLoadedPlaces(prevPlaces =>\n      prevPlaces.filter(place => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n"],"sourceRoot":""}